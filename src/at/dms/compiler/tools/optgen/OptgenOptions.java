
/*
 * Copyright (C) 1990-2001 DMS Decision Management Systems Ges.m.b.H.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * $Id: OptgenOptions.java,v 1.1 2004/07/28 18:43:29 imad Exp $
 */

// Generated by optgen from OptgenOptions.opt
package at.dms.compiler.tools.optgen;

import gnu.getopt.Getopt;
import gnu.getopt.LongOpt;

public class OptgenOptions extends at.dms.util.base.Options {

  public OptgenOptions(String name) {
    super(name);
  }

  public OptgenOptions() {
    this("Optgen");
  }

  public String release = null;

  public boolean processOption(int code, Getopt g) {
    switch (code) {
    case 'r':
      release = getString(g, ""); return true;
    default:
      return super.processOption(code, g);
    }
  }

  public String[] getOptions() {
    String[]	parent = super.getOptions();
    String[]	total = new String[parent.length + 1];
    System.arraycopy(parent, 0, total, 0, parent.length);
    total[parent.length + 0] = "  --release, -r<String>: Sets the release version of the program";
    
    return total;
  }


  public String getShortOptions() {
    return "r:" + super.getShortOptions();
  }


  public void version() {
    System.out.println("Version 2.1B released 17. July 2002");
  }


  public void usage() {
    System.err.println("usage: at.dms.optgen.Main [option]* [--help] <file>+");
  }

  public LongOpt[] getLongOptions() {
    LongOpt[]	parent = super.getLongOptions();
    LongOpt[]	total = new LongOpt[parent.length + LONGOPTS.length];
    
    System.arraycopy(parent, 0, total, 0, parent.length);
    System.arraycopy(LONGOPTS, 0, total, parent.length, LONGOPTS.length);
    
    return total;
  }

  private static final LongOpt[] LONGOPTS = {
    new LongOpt("release", LongOpt.REQUIRED_ARGUMENT, null, 'r')
  };
}
